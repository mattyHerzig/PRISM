name: Generate PR Description

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: read
  pull-requests: write
  
jobs:
  generate-pr-description:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests openai anthropic

      - name: Generate PR Diff Content
        run: |
          echo "Running git diff between the PR branch and main..."
          git fetch origin main
          git diff origin/main...HEAD > diff_content.txt
          echo "Diff content saved to diff_content.txt"
          

      - name: Select Model
        run: |
          python LLM_Models/select_model.py

      - name: Run Model Dispatcher
        env:
          FAST_API_URL: https://91fa-2600-1010-a021-6567-a18a-54f8-9a66-b4e0.ngrok-free.app/generate
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          python LLM_Models/main_dispatcher.py diff_content.txt "${{ github.event.pull_request.number }}"

      - name: Capture PR Description Output
        id: read_pr_description
        run: |
          echo "Checking contents of pr_description.txt"
          if [ ! -s pr_description.txt ]; then
            echo "pr_description.txt is empty! Setting default message."
            echo "No content from the model." > pr_description.txt
          fi
          pr_body=$(cat pr_description.txt)
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          echo "$pr_body" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Debug PR Description Content
        run: |
          echo "Debug: Checking pr_description.txt contents..."
          cat pr_description.txt || echo "pr_description.txt is empty!"

      - name: Update Pull Request Body
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prBody = process.env.PR_BODY;
            if (prBody.trim() === "No content from the model.") {
              console.log("Skipping PR update because the model response is empty.");
            } else {
              console.log("Updating PR with generated description.");
              github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: prBody
              });
            }

      - name: Upload Scores to Firebase
        env:
          FIREBASE_URL: ${{ secrets.FIREBASE_URL }}
          GITHUB_USER: ${{ github.event.pull_request.user.login }}
        run: |
          echo "Uploading scores to Firebase..."
          MODEL=$(python3 -c "import json; print(json.load(open('model_config.json'))['model'])")
          python3 firebase/upload_scores.py pr_description.txt "$GITHUB_USER" "${{ github.event.pull_request.number }}" "$MODEL"
